{"version":3,"sources":["components/BankAccount/TransactionHistory/TransactionHistory.module.css","components/BankAccount/Controls/Controls.jsx","components/BankAccount/helpers.js","components/BankAccount/Balance/Balance.jsx","components/BankAccount/TransactionHistory/TransactionHistory.jsx","components/BankAccount/Dashboard.jsx","components/App/App.jsx","index.js","components/BankAccount/Controls/Controls.module.css","components/BankAccount/Balance/Balance.module.css"],"names":["module","exports","Controls","inputValue","handleInput","handleTransaction","className","styles","controls","type","input","value","onChange","buttonDeposit","name","onClick","button","messages","outOfMoney","emptyField","getSum","arr","filter","el","reduce","acc","Number","amount","Balance","transactions","balance","role","aria-label","arrowUp","arrowDown","TransactionHistory","transactionHistory","head","body","map","bodyItem","key","id","date","Dashboard","state","target","setState","length","toast","error","newTransaction","shortid","generate","Date","toLocaleString","hour12","prevState","reset","localTransactions","JSON","parse","localStorage","getItem","this","setItem","stringify","autoClose","position","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47135538.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1b1Sq\",\"head\":\"TransactionHistory_head__2pLKb\",\"type\":\"TransactionHistory_type__1yjkT\",\"body\":\"TransactionHistory_body__3ysE0\",\"bodyItem\":\"TransactionHistory_bodyItem__NFCLg\",\"amount\":\"TransactionHistory_amount__1fiQg\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Controls.module.css';\n\nconst Controls = ({ inputValue, handleInput, handleTransaction }) => (\n  <section className={styles.controls}>\n    <input\n      type=\"number\"\n      className={styles.input}\n      value={inputValue}\n      onChange={handleInput}\n    />\n    <button\n      type=\"button\"\n      className={styles.buttonDeposit}\n      name=\"Deposit\"\n      onClick={handleTransaction}\n    >\n      Deposit\n    </button>\n    <button\n      type=\"button\"\n      className={styles.button}\n      name=\"Withdrawal\"\n      onClick={handleTransaction}\n    >\n      Withdraw\n    </button>\n  </section>\n);\n\nControls.propTypes = {\n  inputValue: PropTypes.string.isRequired,\n  handleInput: PropTypes.func.isRequired,\n  handleTransaction: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n","const messages = {\n  outOfMoney: 'На счету недостаточно средств для проведения операции!',\n  emptyField: 'Введите сумму для проведения операции!',\n};\n\nconst getSum = (arr, type) => {\n  return arr\n    .filter(el => el.type === type)\n    .reduce((acc, el) => acc + Number(el.amount), 0);\n};\n\nexport { getSum, messages };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSum } from '../helpers';\nimport styles from './Balance.module.css';\n\nconst Balance = ({ transactions }) => (\n  <section className={styles.balance}>\n    <span role=\"img\" aria-label=\"deposit\" className={styles.arrowUp}>\n      ⬆️\n      {getSum(transactions, 'Deposit')}$\n    </span>\n    <span role=\"img\" aria-label=\"widthdrawal\" className={styles.arrowDown}>\n      ⬇️\n      {getSum(transactions, 'Withdrawal')}$\n    </span>\n    <span>\n      Balance:\n      {getSum(transactions, 'Deposit') - getSum(transactions, 'Withdrawal')}$\n    </span>\n  </section>\n);\n\nBalance.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => (\n  <table className={styles.transactionHistory}>\n    <thead className={styles.head}>\n      <tr>\n        <th className={styles.type}>Transaction</th>\n        <th className={styles.amount}>Amount</th>\n        <th>Date</th>\n      </tr>\n    </thead>\n    <tbody className={styles.body}>\n      {transactions.map(el => (\n        <tr className={styles.bodyItem} key={el.id}>\n          <td className={styles.type}>{el.type}</td>\n          <td className={styles.amount}>{el.amount}$</td>\n          <td>{el.date}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Controls from './Controls/Controls';\nimport Balance from './Balance/Balance';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\nimport { getSum, messages } from './helpers';\n\nclass Dashboard extends Component {\n  state = {\n    transactions: [],\n    inputValue: '',\n  };\n\n  componentDidMount() {\n    const localTransactions = JSON.parse(localStorage.getItem('transactions'));\n    if (localTransactions) {\n      this.setState({ transactions: localTransactions });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const { transactions } = this.state;\n    if (transactions !== prevState.transactions) {\n      localStorage.setItem('transactions', JSON.stringify(transactions));\n    }\n  }\n\n  handleInput = ({ target: { value } }) => {\n    this.setState({ inputValue: value });\n  };\n\n  handleTransaction = ({ target: { name } }) => {\n    const { inputValue, transactions } = this.state;\n    const balance =\n      transactions.length === 0\n        ? 0\n        : getSum(transactions, 'Deposit') - getSum(transactions, 'Withdrawal');\n\n    if (Number(inputValue) <= 0) {\n      toast.error(messages.emptyField);\n    } else if (name !== 'Deposit' && Number(inputValue) > balance) {\n      toast.error(messages.outOfMoney);\n    } else {\n      const newTransaction = {\n        id: shortid.generate(),\n        type: name,\n        amount: inputValue,\n        date: new Date().toLocaleString('en-US', { hour12: false }),\n      };\n\n      this.setState(prevState => ({\n        transactions: [...prevState.transactions, newTransaction],\n      }));\n    }\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ inputValue: '' });\n  };\n\n  render() {\n    const { transactions, inputValue } = this.state;\n\n    return (\n      <div className=\"dashboard\">\n        <Controls\n          inputValue={inputValue}\n          handleInput={this.handleInput}\n          handleTransaction={this.handleTransaction}\n        />\n        <Balance transactions={transactions} />\n        <TransactionHistory transactions={transactions} />\n        <ToastContainer autoClose={2500} position=\"bottom-right\" />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport Dashboard from '../BankAccount/Dashboard';\n\nconst App = () => <Dashboard />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__P_B_r\",\"input\":\"Controls_input__2YEyx\",\"button\":\"Controls_button__2nhzk\",\"buttonDeposit\":\"Controls_buttonDeposit__2tL0Y Controls_button__2nhzk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__2eXTg\",\"arrowUp\":\"Balance_arrowUp__6iWRw\",\"arrowDown\":\"Balance_arrowDown__3UsG-\"};"],"sourceRoot":""}